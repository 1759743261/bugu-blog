<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC
        "-//mybatis.org//DTD mapper 3.0//EN"
        "http//mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bugu.mapper.db1.ArticleMapper">

    <!-- 定义可复用的 SQL 代码 -->
    <sql id="articleColumns">
        `id`, `title`, `desc`, `content`, `create_time`, `update_time`, `category_id`, `is_top`, `read`, `like`
    </sql>


    <!-- 实体与表的映射关系、多对一 -->
    <resultMap id="articleResultMap" type="com.bugu.bean.Article">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="desc" column="desc"/>
        <result property="content" column="content"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="isTop" column="is_top"/>
        <result property="read" column="read"/>
        <result property="like" column="like"/>
        <!-- 因为只有一个参数，所以对参数的名称不做要求 -->
        <association
                property="category"
                column="category_id"
                select="com.bugu.mapper.db2.CategoryMapper.queryOneById"
        />
    </resultMap>


    <!-- 增加一条数据 -->
    <insert id="insertOne">
        insert into t_article (<include refid="com.bugu.mapper.db1.ArticleMapper.articleColumns"/>)
        values (#{id}, #{title}, #{desc}, #{content}, #{createTime}, #{updateTime}, #{category.id}, #{isTop}, #{read}, #{like})
    </insert>


    <!-- 删除一条数据、根据 id 删除 -->
    <delete id="deleteOneById">
        delete from `t_article`
        where `id` = #{id}
    </delete>


    <!-- 修改一条数据、根据 id 修改 -->
    <update id="updateOneById">
        update t_article
        set
            `title` = #{title},
            `desc` = #{desc},
            `content` = #{content},
            `category_id` = #{category.id},
            `is_top` = #{isTop},
            `update_time` = #{updateTime}
        where `id` = #{id}
    </update>


    <!-- 文章阅读量加1 -->
    <update id="setArticleReadCount">
        update t_article
        set
            `read` = `read` + 1
        where `id` = #{id}
    </update>

    <!-- 文章点赞量加1 -->
    <update id="setArticleLikeCount">
        update t_article
        set
            `like` = `like` + 1
        where `id` = #{id}
    </update>


    <!-- 查询全部数据 -->
    <select id="queryAll" resultMap="com.bugu.mapper.db1.ArticleMapper.articleResultMap">
        SELECT `id`, `title`, `desc`, `create_time`, `update_time`, `category_id`, `is_top`, `read`, `like`
        FROM `t_article`
        ORDER BY `is_top` DESC, `create_time` DESC
    </select>


    <!-- 查询一条数据、根据 id 查询 -->
    <select id="queryOneById" resultMap="com.bugu.mapper.db1.ArticleMapper.articleResultMap">
        SELECT <include refid="com.bugu.mapper.db1.ArticleMapper.articleColumns" />
        FROM `t_article`
        where `id` = #{id}
    </select>

    <!-- 查询3条公告，根据时间查询 -->
    <select id="queryNoticeByDateTop3" resultMap="com.bugu.mapper.db1.ArticleMapper.articleResultMap">
        SELECT `id`, `title`
        FROM `t_article`
        WHERE `category_id` = 3
        ORDER BY `update_time` DESC
        LIMIT 0, 3
    </select>

    <!-- 查询top3，根据时间查询 -->
    <select id="queryTop3ByDate" resultMap="com.bugu.mapper.db1.ArticleMapper.articleResultMap">
        SELECT `id`, `title`, `update_time`
        FROM `t_article`
        ORDER BY `update_time` DESC
        LIMIT 0, 3
    </select>

    <!-- 查询多条数据、根据 title 模糊查询 -->
    <select id="queryListByLikeTitleAndInCategoryId" resultMap="com.bugu.mapper.db1.ArticleMapper.articleResultMap">
        SELECT `id`, `title`, `desc`, `create_time`, `update_time`, `category_id`, `is_top`, `read`, `like`
        FROM `t_article`
        where `title` like '%${title}%'
        <foreach item="categoryId" index="index" collection="categoryIds" open="or `category_id` in (" separator="," close=")">
            #{categoryId}
        </foreach>
        ORDER BY `create_time` DESC
    </select>


    <!-- 分页查询，根据时间查询 -->
    <select id="queryPage" resultMap="com.bugu.mapper.db1.ArticleMapper.articleResultMap">
        SELECT `id`, `title`, `desc`, `create_time`, `update_time`, `category_id`, `is_top`, `read`, `like`
        FROM `t_article`
        ORDER BY `is_top` DESC, `create_time` DESC
        LIMIT #{startIndex}, #{pageSize}
    </select>


    <!-- 查询数量 -->
    <select id="queryCount" resultType="long">
        SELECT count(*)
        FROM `t_article`
    </select>

</mapper>